name: SQL Syntax Check

on:
  pull_request:
    paths:
      - 'db.sql'

jobs:
  generate_password:
    name: Generate DB Password
    runs-on: ubuntu-latest
    outputs:
      db_password: ${{ steps.set_password.outputs.db_password }}

    steps:
    - name: Set DB Password
      id: set_password
      run: echo "::set-output name=db_password::$(openssl rand -base64 12)"

  syntax_check:
    name: Check SQL Syntax
    runs-on: ubuntu-latest
    env:
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    services:
      mariadb:
        image: mariadb:latest
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Wait for MariaDB to Start
      run: dockerize -wait tcp://localhost:3306 -timeout 1m

    - name: Initialize Database and Set Root Password
      run: |
        docker exec mariadb mysql_install_db --user=mysql --auth-root-authentication-method=normal

    - name: Set Root Password
      run: |
        docker exec -i mariadb mysql -uroot -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '${{ steps.set_password.outputs.db_password }}';"

    - name: Run SQL Linting
      run: |
        docker exec -i mariadb mysql -uroot -p"${{ steps.set_password.outputs.db_password }}" < db.sql

    - name: Stop MariaDB
      run: docker stop mariadb
